services:
  atomforge:
    build:
      context: .
      dockerfile: Dockerfile
      # Force clean build each time
      no_cache: false
    image: atomforge-v2:latest
    platform: linux/amd64
    container_name: atomforge-v2
    ports:
      - "8000:8000"
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/atomforge
      - FDO_RELEASES_DIR=/atomforge/releases
      - LOGLEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8000
      # Daemon Configuration
      # Single Daemon Mode (default, set POOL_ENABLED=false)
      - FDO_DAEMON_POOL_ENABLED=true
      - FDO_DAEMON_BIND=127.0.0.1
      - FDO_DAEMON_PORT=8080
      - FDO_DAEMON_POOL_SIZE=30
      - FDO_DAEMON_POOL_MAX_SIZE=100  # Maximum allowed pool size (configurable upper limit)
      - FDO_DAEMON_POOL_BASE_PORT=8080
      - FDO_DAEMON_HEALTH_INTERVAL=10.0
      - FDO_DAEMON_MAX_RESTART_ATTEMPTS=5
      - FDO_DAEMON_MAX_RETRIES=3
      - FDO_DAEMON_CIRCUIT_BREAKER_THRESHOLD=3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s  # FDO Tools Python module starts quickly
    volumes:
      # Optional: Mount local directory for persistent compiled files
      - ./compiled_output:/atomforge/compiled_output
      # Mount validation results for analysis
      - ./validation_results:/atomforge/validation_results
    # Resource limits for production deployment
    # Single daemon mode: 256M is sufficient
    # Pool mode (5 daemons): Increase to 1G for stability
    deploy:
      resources:
        limits:
          memory: 5G  # Increased from 256M to support pool mode
          cpus: '1.0'  # Increased from 0.5 to support pool mode
        reservations:
          memory: 256M
          cpus: '0.5'
    # Labels for monitoring and management
    labels:
      - "com.atomforge.service=api"
      - "com.atomforge.version=2.0.0"
      - "com.atomforge.mode=single_daemon"
